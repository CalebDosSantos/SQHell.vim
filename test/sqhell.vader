Execute (test all expected commands are available to use):
  AssertEqual exists(':SQHSwitchConnection'), 2
  AssertEqual exists(':SQHShowDatabases'), 2
  AssertEqual exists(':SQHExecute'), 2
  AssertEqual exists(':SQHExecuteFile'), 2
  AssertEqual exists(':SQHSortResults'), 2
  AssertEqual exists(':SQHDropDatabase'), 2
  AssertEqual exists(':SQHDropTableFromDatabase'), 2

Execute (test results buffer sets the correct filetype):
  call sqhell#InsertResultsToNewBuffer('testType', '')
  AssertEqual 'testType', &filetype

Execute (test results buffer has correct buffer local settings):
  call sqhell#InsertResultsToNewBuffer('testType', '')
  AssertEqual 'hide', &bufhidden
  AssertEqual 'nofile', &buftype

Execute (test a warning is echoed if we set an invalid host):
  let previous_content = @a

  let g:sqh_connections = {
      \'test': '',
      \'another-connection': '',
      \'live': ''
      \}

  redir @a
  call sqhell#SwitchConnection('pleb')
  redir end

  "join and split to remove the cruddy \n's"
  let last_message = join(split(@a,"\n"))
  let @a = previous_content

  AssertEqual '[SQHELL] host must be one of [live, another-connection, test]', last_message
